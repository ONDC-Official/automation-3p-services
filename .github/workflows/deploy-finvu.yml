name: Deploy finvu-aa-service
on:
  workflow_dispatch:
  push:
    paths:
      - "automation-finvu-aa-service/*"
    branches:
      - main

jobs:
  deploy-draft:
    if: startsWith(github.ref_name, 'release') == false
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref_name }}
      url: https://github.com

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: SSH Setup and Cloning Repository
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ./key.pem
          chmod 600 ./key.pem
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts



          ssh -i ./key.pem ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} -T <<EOF
          REPO_DIR=~/ONDC-automation-framework/finvu-aa-service-${{ github.ref_name }}
          echo "Removing existing repository directory if exists"
          rm -rf \$REPO_DIR
          echo "Cloning repository from main branch"
          git clone --single-branch --branch main https://github.com/ONDC-Official/automation-3p-services.git \$REPO_DIR
          EOF

      - name: Install Docker Compose (if not installed)
        run: |
          ssh -i ./key.pem ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} <<EOF
          # Check if Docker Compose is installed
          if ! command -v docker-compose &> /dev/null
          then
            echo "Docker Compose not found. Installing..."
            sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          else
            echo "Docker Compose is already installed."
          fi
          EOF

      - name: Write secrets to .env on EC2
        run: |
          echo "Writing secrets to .env file"
      
          ssh -i ./key.pem ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} <<'EOF'
          REPO_DIR=~/ONDC-automation-framework/finvu-aa-service-${{ github.ref_name }}/automation-finvu-aa-service
      
          echo "Writing environment variables to .env file in \$REPO_DIR"
      
          mkdir -p "$REPO_DIR"
          cd "$REPO_DIR" || exit 1
      
          cat > .env <<EOL
          NODE_ENV=${{ vars.NODE_ENV }}
          PORT=${{ vars.PORT }}
          HOST=${{ vars.HOST }}
          FINVU_BASE_URL=${{ vars.FINVU_BASE_URL }}
          FINVU_USER_ID=${{ vars.FINVU_USER_ID }}
          FINVU_PASSWORD=${{ secrets.FINVU_PASSWORD }}
          FINVU_RETURN_URL=${{ vars.FINVU_RETURN_URL }}
          FINVU_AA_ID=${{ vars.FINVU_AA_ID }}
          REDIS_USERNAME=${{ vars.REDIS_USERNAME }}
          REDIS_HOST=${{ vars.REDIS_HOST }}
          REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}
          REDIS_PORT=${{ vars.REDIS_PORT }}
          LOKI_HOST=${{ vars.LOKI_HOST }}
          TRACE_URL=${{ vars.TRACE_URL }}
          EOL
      
          echo ".env file successfully written at \$REPO_DIR/.env"
          ls -l "$REPO_DIR/.env"
          EOF


      - name: Verify .env and docker-compose.yml files
        run: |
          ssh -i ./key.pem ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} <<EOF
          REPO_DIR=~/ONDC-automation-framework/finvu-aa-service-${{ github.ref_name }}/automation-finvu-aa-service
          # Check if .env and docker-compose.yml files exist
          if [ ! -f \$REPO_DIR/.env ]; then
            echo ".env file not found in \$REPO_DIR!"
            exit 1
          fi
          if [ ! -f \$REPO_DIR/docker-compose.yml ]; then
            echo "docker-compose.yml file not found in \$REPO_DIR!"
            exit 1
          fi
          echo ".env and docker-compose.yml files found."
          EOF



      - name: Finvu AA Service Deployment
        run: |
          echo "Deploying with Docker Compose"
          ssh -i ./key.pem ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} <<EOF
          REPO_DIR=~/ONDC-automation-framework/finvu-aa-service-${{ github.ref_name }}/automation-finvu-aa-service
          cd \$REPO_DIR

          # Ensure the .env and docker-compose.yml files exist
          if [ ! -f .env ]; then
            echo ".env file not found!"
            exit 1
          fi

          if [ ! -f docker-compose.yml ]; then
            echo "docker-compose.yml file not found!"
            exit 1
          fi

          # Start the containers using Docker Compose
          echo "Running docker-compose up -d --build for finvu-aa-service"
          sudo docker compose up -d --build
          EOF

  deploy-release:
    if: startsWith(github.ref_name, 'release') == true
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref_name }}
      url: https://github.com

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: SSH Setup and Cloning Repository
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ./key.pem
          chmod 600 ./key.pem
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts



          ssh -i ./key.pem ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} -T <<EOF
          REPO_DIR=~/ONDC-automation-framework-staging/finvu-aa-service-${{ github.ref_name }}
          echo "Removing existing repository directory if exists"
          rm -rf \$REPO_DIR
          echo "Cloning repository from main branch"
          git clone --single-branch --branch main https://github.com/ONDC-Official/automation-3p-services.git \$REPO_DIR
          EOF

      - name: Install Docker Compose (if not installed)
        run: |
          ssh -i ./key.pem ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} <<EOF
          # Check if Docker Compose is installed
          if ! command -v docker-compose &> /dev/null
          then
            echo "Docker Compose not found. Installing..."
            sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          else
            echo "Docker Compose is already installed."
          fi
          EOF

      - name: Write secrets to .env on EC2
        run: |
          echo "Writing secrets to .env file"
          ssh -i ./key.pem ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} <<EOF
          REPO_DIR=~/ONDC-automation-framework-staging/finvu-aa-service-${{ github.ref_name }}
          echo "Writing environment variables to .env file"
          cd "$REPO_DIR"
          cat > .env <<EOL
          NODE_ENV=${{ vars.NODE_ENV }}
          PORT=${{ vars.PORT }}
          HOST=${{ vars.HOST }}
          FINVU_BASE_URL=${{ vars.FINVU_BASE_URL }}
          FINVU_USER_ID=${{ vars.FINVU_USER_ID }}
          FINVU_PASSWORD=${{ secrets.FINVU_PASSWORD }}
          FINVU_RETURN_URL=${{ vars.FINVU_RETURN_URL }}
          FINVU_AA_ID=${{ vars.FINVU_AA_ID }}
          REDIS_USERNAME=${{ vars.REDIS_USERNAME }}
          REDIS_HOST=${{ vars.REDIS_HOST }}
          REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}
          REDIS_PORT=${{ vars.REDIS_PORT }}
          LOKI_HOST=${{ vars.LOKI_HOST }}
          TRACE_URL=${{ vars.TRACE_URL }}
          EOL
          EOF

      - name: Verify .env and docker-compose.yml files
        run: |
          ssh -i ./key.pem ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} <<EOF
          REPO_DIR=~/ONDC-automation-framework-staging/finvu-aa-service-${{ github.ref_name }}
          # Check if .env and docker-compose.yml files exist
          if [ ! -f \$REPO_DIR/.env ]; then
            echo ".env file not found in \$REPO_DIR!"
            exit 1
          fi
          if [ ! -f \$REPO_DIR/docker-compose.yml ]; then
            echo "docker-compose.yml file not found in \$REPO_DIR!"
            exit 1
          fi
          echo ".env and docker-compose.yml files found."
          EOF



      - name: Finvu AA Service Deployment
        run: |
          echo "Deploying with Docker Compose"
          ssh -i ./key.pem ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} <<EOF
          REPO_DIR=~/ONDC-automation-framework-staging/finvu-aa-service-${{ github.ref_name }}
          cd \$REPO_DIR

          # Ensure the .env and docker-compose.yml files exist
          if [ ! -f .env ]; then
            echo ".env file not found!"
            exit 1
          fi

          if [ ! -f docker-compose.yml ]; then
            echo "docker-compose.yml file not found!"
            exit 1
          fi

          # Start the containers using Docker Compose
          echo "Running docker-compose up -d --build for finvu-aa-service"
          sudo docker compose up -d --build
          EOF
